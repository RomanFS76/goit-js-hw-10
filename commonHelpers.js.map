{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\n\n\nconst btnStart = document.querySelector('[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEL = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nbtnStart.addEventListener('click', event => {\n    btnStart.disabled = false;\n    startTimer();\n\n});\n\nbtnStart.disabled = true;\nconst currentTime = new Date();\n\n\nlet userSelectDates;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    \n    onClose(selectedDates) {\n        userSelectDates = selectedDates[0];\n        console.log(userSelectDates);\n        if (userSelectDates >= currentTime) {\n            btnStart.disabled = false;\n        } else {\n            btnStart.disabled = true;\n        window.alert('Please choose a date in the future');\n        }\n    }\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction startTimer() {\n    const intervalId = setInterval(timer, 1000);\n    // clearInterval(intervalId);\n}\n\nconst differenceTime = userSelectDates - currentTime;\nconsole.log(currentTime);\nconsole.log(userSelectDates);\nconsole.log(differenceTime);\n\nfunction timer() {\n    if (differenceTime > 0) {\n        differenceTime -=1000;\n        updateTimer(convertMs(differenceTime));\n    } else {\n        clearInterval(intervalId);\n    }\n}\n\nfunction updateTimer({ days, hours, minutes, seconds }) { \n    daysEl.textContent = `${days}`;\n    hoursEl.textContent = `${hours}`;\n    minutesEL.textContent = `${minutes}`;\n    secondsEl.textContent = `${seconds}`;\n};\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = addLeadingZero(Math.floor(ms / day));\n    // Remaining hours\n    const hours = addLeadingZero(Math.floor((ms % day) / hour));\n    // Remaining minutes\n    const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n    // Remaining seconds\n    const seconds = addLeadingZero(\n        Math.floor((((ms % day) % hour) % minute) / second)\n    );\n}\n\n"],"names":["btnStart","daysEl","hoursEl","minutesEL","secondsEl","event","startTimer","currentTime","userSelectDates","options","selectedDates","flatpickr","timer","differenceTime","updateTimer","convertMs","days","hours","minutes","seconds","addLeadingZero","value","ms"],"mappings":"oGAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzDJ,EAAS,iBAAiB,QAASK,GAAS,CACxCL,EAAS,SAAW,GACpBM,GAEJ,CAAC,EAEDN,EAAS,SAAW,GACpB,MAAMO,EAAc,IAAI,KAGxB,IAAIC,EAEJ,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACnBF,EAAkBE,EAAc,CAAC,EACjC,QAAQ,IAAIF,CAAe,EACvBA,GAAmBD,EACnBP,EAAS,SAAW,IAEpBA,EAAS,SAAW,GACxB,OAAO,MAAM,oCAAoC,EAEpD,CACL,EAEAW,EAAU,mBAAoBF,CAAO,EAErC,SAASH,GAAa,CACC,YAAYM,EAAO,GAAI,CAE9C,CAEA,MAAMC,EAAiBL,EAAkBD,EACzC,QAAQ,IAAIA,CAAW,EACvB,QAAQ,IAAIC,CAAe,EAC3B,QAAQ,IAAIK,CAAc,EAE1B,SAASD,GAAQ,CACTC,EAAiB,GACjBA,GAAiB,IACjBC,EAAYC,EAAUF,CAAc,CAAC,GAErC,cAAc,UAAU,CAEhC,CAEA,SAASC,EAAY,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACpDlB,EAAO,YAAc,GAAGe,CAAI,GAC5Bd,EAAQ,YAAc,GAAGe,CAAK,GAC9Bd,EAAU,YAAc,GAAGe,CAAO,GAClCd,EAAU,YAAc,GAAGe,CAAO,EACtC,CAEA,SAASC,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC,CAEA,SAASN,EAAUO,EAAI,CAQNF,EAAe,KAAK,MAAME,EAAK,KAAG,CAAC,EAElCF,EAAe,KAAK,MAAOE,EAAK,MAAO,IAAI,CAAC,EAE1CF,EAAe,KAAK,MAAQE,EAAK,MAAO,KAAQ,GAAM,CAAC,EAEvDF,EACZ,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,CACpD,CACN"}